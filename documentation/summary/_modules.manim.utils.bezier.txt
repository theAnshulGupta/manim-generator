The `manim.utils.bezier` module provides utility functions related to Bézier curves, including:

1. Bezier curve generation and manipulation functions:
- `bezier()`: Generates Bézier curves of various degrees
- `partial_bezier_points()`: Extracts a portion of a Bézier curve
- `split_bezier()`: Splits a Bézier curve at a specific point
- `subdivide_bezier()`: Subdivides a Bézier curve into multiple parts
- `bezier_remap()`: Remaps Bézier curves to a desired number of curves

2. Interpolation functions:
- `interpolate()`: Linear interpolation between values
- `integer_interpolate()`: Integer-based interpolation
- `mid()`: Calculates midpoint
- `inverse_interpolate()`: Calculates interpolation alpha
- `match_interpolate()`: Interpolates values between ranges

3. Curve smoothing functions:
- `get_smooth_cubic_bezier_handle_points()`: Generates smooth handle points for cubic Bézier curves
- `get_quadratic_approximation_of_cubic()`: Approximates cubic Bézier curves with quadratic curves

4. Utility functions:
- `is_closed()`: Checks if a spline is closed
- `proportions_along_bezier_curve_for_point()`: Finds parameter values for a point on a Bézier curve
- `point_lies_on_bezier()`: Checks if a point lies on a Bézier curve