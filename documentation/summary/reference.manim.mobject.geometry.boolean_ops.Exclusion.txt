Exclusion is a boolean operation in Manim that creates a new VMobject representing the symmetric difference (XOR) between two VMobjects - only the regions covered by exactly one of the input shapes.

Key points:
- Takes two VMobjects as input: `subject` and `clip`
- Produces a new shape where overlapping regions are removed
- Useful for creating complex geometric shapes

Example code:
```python
class IntersectionExample(Scene):
    def construct(self):
        sq = Square(color=RED, fill_opacity=1).move_to([-2, 0, 0])
        cr = Circle(color=BLUE, fill_opacity=1).move_to([-1.3, 0.7, 0])
        un = Exclusion(sq, cr, color=GREEN, fill_opacity=1).move_to([1.5, 0.4, 0])
        self.add(sq, cr, un)
```

The example demonstrates creating a square and circle, then generating an Exclusion shape that shows only the non-overlapping areas, colored green.